## 一、引言

区块链这种分布式总账技术（DLT, Distributed Ledger Technology），能够让参与各方在技术层面建立信任（Trust），有潜力成为构建未来价值自由流通网络的基础设施，即形成价值互联网（Internet of Value）。区块链是分布式数据存储、点对点传输、共识机制、加密算法等计算机技术的新型应用模式。区块链技术是用块链式数据结构来验证与存储数据、用分布式节点共识算法来生成和更新数据、用密码学的方式保证数据传输和访问的安全、用由自动化脚本代码组成的智能合约来编程和操作数据的一种全新的分布式基础架构与计算范式。

SCSC 区块链服务致力于为包括数据公证，供应链管理，云记录等领域提供技术创新的动力，是一套全新自主研发的区块链架构。产品聚焦于区块链基础平台和应用系统的建设，帮助需求主体快速、高效的搭建区块链行业方案和应用，共同推动区块链应用场景落地，打造基于区块链的公共信任基础设施和共赢生态。
                                                                               
## 二、简介

SCSC区块链服务的产品定位是，提供稳定高效的区块链基础设施服务，主要包括：一是基础开发平台：基于开放易用、灵活高效的通用型基础技术，为需求主体提供快速便捷的区块链应用开发服务；二是业务应用系统：通过基础开发平台海量用户的数据沉淀和多链多共识的运行机制，实现不同行业应用场景的快速建立与稳步运营。

产品亮点主要表现在以下几个层面：
1、链扩容机制
SCSC 拥有独特的链扩容机制，支持多条并行的主链，不同的主链可以采用不同的共识机制，用以承担独特的业务应用场景。
2、敏捷式开发支持
为开发者提供一站式规划、配置、开发、上线和运维的区块链平台服务，方便快速地构建应用。
3、智能合约语言
SCSC 提供了一套全新的智能合约开发语言 SCS，使得开发者可以根据自己的业务需求定制自己的智能合约。
4、云数据支持
SCSC 提供优质稳定的云数据处理能力，用户可以修改公私钥对以及使用的加密算法，这使得 SCSC 的用户体系的安全度会一直跟随时代的发展。

## 三、产品架构

SCSC的产品定位是提供稳定高效的区块链基础设施服务，主要包括两个层面：一是基础开发平台：基于开放易用、灵活高效的通用型基础技术，为需求主体提供快速便捷的区块链应用开发服务；二是业务应用系统：通过基础开发平台海量用户的数据沉淀和多链多共识的运行机制，对外进行建模适配，提供一系列符合应用场景的接口，降低应用对接的复杂度。
SCSC区块链服务产品架构多数单元从零开始自主研发实现，有些部分采用某些标准的开源组件，还有 一些部分是在成熟框架上进行优化和改进。 

基础开发平台

P2P网络
SCSC平台网络中的节点之间通过 Gossip 协议来进行状态同步和数据分发。Gossip 协议是 P2P领域的常见协议，用于进行网络内多个节点之间的数据分发或信息交换。其设计简单，容易实现，同时容错性较高。每个节点维护一张邻居列表，实现动态自组织网络，与现有的安全防护设施配合使用，确保网络的安全性。

分布式账本
解决数据格式、数据记录、数据存储问题。因此分布式账本设计的好坏决定了区块链底层对外提供服务的能力。SCSC设计采用区块与状态多账本记录模式，记录智能合约的交易记录，保存在文件中。保存智能合约数据的最新状态，保存在 KV(Key-Value)数据库中。

私钥验证
SCSC 主链会提供不同的加密算法供用户使用：在 SCSC 主链中，每个用户可以提交公钥以及主链支持的加密算法申请个性化的地址。SCSC 公链中的用户地址由申请获得，用户可以更换地址背后所对应的公私钥对。如果用户更换公私钥对，主链以外的其他主链有两种方法可以校验用户的签名信息：第一种是如果对安全性要求不是太高，可以同步主链区块，使用最新的区块来校验用户的公钥，即使同步主链区块略微延时几个区块也不影响；第二种方法：其他主链通过 RPC 调用 SCSC 主链的校验方法。将地址、消息和签名发送到主链的节点，节点验证后返回处理结果。一般情况下，如果有(1+n/2)个节点校验通过则可以视为整体验证通过。

多链多共识机制
不用的应用场景对区块链的要求也会不同。在SCSC提供的多链架构中，除了 SCSC 的主链外还支持多条并行的主链， 开发者可以通过主链提供的共识接口创建并完成自己节点的部署。以太坊在共识效率上存在打包集中处理的问题，这是以太坊的TPS不到20的重要原因。在这一点上，SCSC具备绝对优势。SCSC单链的峰值应该是3500TPS，这是因为我们使用了DPOS加Paxos作为共识机制，用户数量越多，TPS的上限也就越高，理论上TPS不存在上限值.

跨链协议
为了兼容大多数公链，SCSC 定义的报文协议以 HTTP 协议为基础，请求和响应的Content-Type必须为application/json，请求参数和响应参数必须与协议中的规定相同。在相互注册成功以后，就可以进行跨链的资产转换。
SCSC的某用户A想要转移资产到Z链上。首先SCSC主链会发送握手协议报文，查询双方是否已经相互注册成功。如果Z链可以正确的回复握手协议，那SCSC链会对A用户的交易进行打包，并把交易信息和区块头信息发送给Z链进行校验。其伪代码为
func (sender Sender) SendCrossChain(destChain []byte, to []byte, value int64) error {
    if balances[sender.Address] < value {
        return errors.New("no enough balance")
    }
    crosschain.SendEvent(destChain, event.Event{Name: "CrossChainEvent", To: hex.EncodeToString(to), Value: value})
    balances[sender.Address] -= value
    balances[destChain] += value
}
Z链在收到交易信息和区块头信息以后会进行验证。验证通过以后会发送一个确认报文。其伪代码为：
func RecieveCrossChainEvent(sendChain []byte, to []byte, value int64) {
    if event.Name == "CrossChainEvent" {
        if balances[sendChain] < value {
	    return errors.New("no enough balance")
	}
	balances[to] +=value
        balances[sendChain] -= value
    }
}

扩容机制
在SCSC中，使用公私钥加密和一些路由策略进行容错，每个DPoS节点的公钥都是公开的，具体策略如下：
1. 节点传播
当一个节点完成打包之后，会对区块进行签名，然后把区块和签名广播给其他的节点。当一个节点收到区块和签名之后会对签名进行校验，确认是从打包节点广播出去的，在确认是打包节点广播出来的区块之后，会判断自己与打包节点在当前轮的距离，如果满足条件 (currentIndex - miningIndex + len(DPoSNodes)) % len(DPoSNodes) < len(DPoSNodes) / 2，则将自己收到的区块和签名广播给其他节点。 当一个节点收到两个不同的打包节点的区块和签名之后，将两个不同的区块和签名发送给所有其他节点，所有节点放弃当前区块，进入下一个区块的打包并对当前打包节点的作恶行为进行记录。
2. BODY校验
在每个区块头上，都会有区块body的Hash校验值，节点可以向其他节点获取区块body，对body进行处理之后，对当前打包的区块进行投票，所有节点都会把区块的校验结果进行签名，发送给满足 (currentIndex - miningIndex + len(DPoSNodes)) % len(DPoSNodes) < len(DPoSNodes) / 2条件的节点进行唱票。 当任何一个节点收到超过半数对同一个区块的投票之后即可认为当前的区块可写入区块链中，并将区块和投票结果发送给所有的节点，所有节点对区块进行记录。如果投票的数量不足半数则在一定时间内停止唱票，将自己的唱票结果发送给其他节点，所有节点在收到其他节点的投票结果之后对结果进行合并，判断最后的投票结果并执行响应的操作。
3. 效率出块
当一个节点超过一定时间没有出块，当前轮的下一个节点会在 3*interval/2 的时间点开始打包下一个区块，进入下一个区块的打包流程。同理，如果连续节点宕机，判断当前节点是否需要打包的条件是 currentTime - lastBlockTime > (2*(currentIndex - LastIndex)+1)*interval/2，一旦满足当前条件，则当前节点开始打包。如果是最后n个区块连续宕机，则按照当前轮的最后一个区块的hash值判断下一轮的顺序，按照递增每个区块加一个出块interval的算法进行计算，判断当前打包的节点并进行打包。 当超过n/2的节点宕机的时候，所有节点会自动停止出块，直到超过1/2的节点存活。
上面的容错算法可以保障在少于n/2的节点宕机或者叛变的情况下，系统不会出现分叉，是一种用计算资源换容错性的方案。 最好情况下：消息复杂度O(n^2), 时间复杂度O(1) 最差情况下：消息复杂度O(n^2), 时间复杂度O(n)
SCSC 的主链共识机制为 DPoS。



SCS 智能合约语言
为了方便开发者基于 SCSC 开发符合自己实际需求的智能合约，SCSC设计了一门新的智能合约开发语言：SCS。 SCS 是一个事件驱动的语言。事件分为两种类型：用户事件和系统事件。用户事件是指 DApp 客户端的调用。经过 DApp 的共识之后，DApp 客户端会发送一个事件到智能合约。系统事件是指区块完成打包、某个交易处理完成或者智能合约订阅的一些其他事件。
此外， SCS 也支持面向对象的编程，开发者可以使用面向对象的思想来进行开发。件分为两种类型：用户事件和系统事件。用户事件是指 DApp 客户端的调用。经过 DApp 的共识之后，DApp 客户端会发送一个事件到智能合约。系统事件是指区块完成打包、某个交易处理完成或者智能合约订阅的一些其他事件。另外 SCS 也支持面向对象的编程，开发者可以使用面向对象的思想来进行开发。

## 四、业务应用系统

应用场景
基于技术平台优势及业务应用系统的构建，SCSC正着力于数据公证，供应链溯源等领域结合区块链应用的开发。

数据公证（数据存证/身份认证）
数据公证（数据存证/身份认证）应用通过搭建可信的数据平台，实现数据资产的登记、交易、溯源，帮助用户进行数据有效存储和证明，帮助实现用户的身份数据接入鉴权、固件管理等。数据公证（数据存证/身份认证）是区块链技术应用的一个重要领域，不仅如此，由于区块链技术具备高信任度、可追朔和协同性等特质，使得其在数据公证的应用领域具备成为基础技术的潜力。
数据公证在各个应用领域中所处的位置至关重要，但目前该服务也一直面临着隐私泄露、身份欺诈以及碎片化等问题，给用户、设备和系统均带来极大的挑战。 区块链技术的引入和发展，为进一步解决上述问题提供了新的思路。SCSC数据公证应用将对信息采集、征信系统、信息认证系统实施连接，运用区块链数据处理逻辑对信息进行数据验证和数据回溯，同时为用户提供反馈机制，用户可以基于系统数据处理结果进行申诉，数据将进行二次认证，保证数据公证的可靠性。
将区块链技术应用到身份及接入管理服务中，将有可能形成一种协作的、透明的身份管理方案，有助于企业、 组织更好的完成数据认证。 SCSC团队关于数据公证（数据存证/身份认证）的应用，将依托新的硬件、软件和区块链平台等的配套支持，为企业、组织提供专业、安全、高效的身份和管理服务。
伴随着数字化进程的加速及云数据技术发展，数据公证的应用领域将越来越广泛，包括互联网、物联网、社会和经济生活等。在这些应用领域中，数据公证的典型作用是保障具备合法身份的用户或设备可以安全、高效的接入和享受服务。

供应链
供应链金融领域的业务形态，具备多方协调合作的特性。利用区块链，能将分散独立的各自单中心，提升为多方参与的统一多中心，打通贸易上下游各个环节，提高信任传递效率，降低交易成本，促进供应链领域的良性生态建设。
在原有的传统供应链领域，信息散落在供应链各家自有系统中，流通环节存在信息重复验证，效率低下；受各个供应链圈的信息流限制，各环节的运营主体缺乏统一可靠的指挥控制系统，环节流通效率低，信息消耗成本高。SCSC供应链应用对供应链各环节的信息进行区块记录，并保障其真实有效、不可篡改，包括但不仅限于生产商，贸易商，仓储物流方及金融保险机构和最终消费方。链信息的记录和积累，也是企业自征信的过程，基于这些征信数据，强化企业自身信用管理。不仅可以实现交易数据的有效记录识别，项目/合同执行的过程也可以完整溯源跟踪，降低环节流通风险。
